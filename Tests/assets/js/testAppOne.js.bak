/*jslint white: true */
/*global Y, YAX, $, Self */

Y.DOM(document).ready(function () {

	'use strict';

	var Wrapper = Y.DOM('body');
	var TestOneImage = Y.DOM('#TestOneImage');
//	var ButtonOne = Y.DOM('#ButtonOne');

	TestOneImage.attr('src', '../../../../Media/yax_js_logo_01-o.svg');

	TestOneImage.width(115);

	TestOneImage.css({
		marginTop: -13
	});

	TestOneImage.tooltip({
		content: 'Testing Tooltips!',
		gravity: 'west',
		theme: 'dark',
		animation: 'flipIn'
	});

//	Wrapper.waitForMe();
//
//	var closeWaitForMe = function closeWaitForMe () {
//		Wrapper.waitForMe('close');
//	};

//	Wrapper.oneTime(3000, 'closeWaitForMe', closeWaitForMe);

//	Wrapper.stopTranAnim(false, false);

//	var localStorage = new Y.Store('localStorage');
//	var cookies = new Y.Store('cookies');
//	var csv = new Y.Parser('CSV');

//	localStorage.set('Test', Y.Lang.variableDump(Y.Lang));

//	JSON.stringifyOncea = function stringifyOnce(obj, replacer, indent) {
//		var printedObjects = [];
//		var printedObjectKeys = [];
//
//		function printOnceReplacer(key, value) {
//			var printedObjIndex = false;
//
//			printedObjects.forEach(function (obj, index) {
//				if (obj === value) {
//					printedObjIndex = index;
//				}
//			});
//
//			if (printedObjIndex && typeof value === "object") {
//				return "(see " + value.constructor.name.toLowerCase() +
//					" with key " + printedObjectKeys[printedObjIndex] + ")";
//			}
//
//			var qualifiedKey = key || "(empty key)";
//
//			printedObjects.push(value);
//
//			printedObjectKeys.push(qualifiedKey);
//
//			if (replacer) {
//				return replacer(key, value);
//			}
//
//			return value;
//		}
//
//		return JSON.stringify(obj, printOnceReplacer, indent);
//	};
//
//	JSON.stringifyOnce = function (obj, replacer, space) {
//		var cache = [];
//		var json = JSON.stringify(obj, function(key, value) {
//			if (typeof value === 'object' && value !== null) {
//				if (cache.indexOf(value) !== -1) {
//					// circular reference found, discard key
//					return;
//				}
//				// store value in our collection
//				cache.push(value);
//			}
//			return replacer ? replacer(key, value) : value;
//		}, space);
//		cache = null;
//		return json;
//	};
//
//	var T1 = JSON.stringifyOncea(Y.Lang, null, 4);

//	var tt1 = {
//		values: {
//			'Yes': 'Yes',
//			'No': 'No',
//			'%n comments': [
//				[0, 0, '%n comments'],
//				[1, 1, '%n comment'],
//				[2, null, '%n comments']
//			]
//		},
//
//		contexts: [
//			{
//				'matches': {
//					'gender': 'male'
//				},
//				'values': {
//					'%{name} updated their profile': '%{name} updated his profile'
//				}
//			},
//
//			{
//				'matches': {
//					'gender': 'female'
//				},
//				'values': {
//					'%{name} updated their profile': '%{name} updated her profile'
//				}
//			}
//		]
//	};

//	Y.i18n.add(tt1, 'en');

//	Y.log('');
	Y.log(Y);
	Y.log(Y.size());

//	Y.log(Y._t('%{name} updated their profile', 'en',
//		{
//			name: 'Xavier'
//		},
//		{
//			gender: 'male'
//		})
//	);

//	Y.log(localStorage);
//	Y.log(localStorage.available());
//	Y.log(cookies);
//	Y.log(cookies.available());
//	Y.log(csv);
//	Y.log(Y.UserAgent);

});